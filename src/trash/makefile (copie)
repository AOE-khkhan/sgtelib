EXE                = ../bin/sgtelib_main.exe ../bin/sgtelib_server.exe
LIB_NAME           = libsgtelib.so
LIB_DIR            = ../lib
LIB                = $(LIB_DIR)/$(LIB_NAME)
COMPILATOR         = g++
COMPILATOR_OPTIONS = -O3 -pedantic -Wall -Wextra -g3 -fpic

LIB_CURRENT_VERSION= 1.0.0

LIBS               = -lc -lm  

UNAME             := $(shell uname)

ifeq ($(UNAME), Darwin)
SHARED_OPTIONS     = -current_version $(LIB_CURRENT_VERSION) -compatibility_version $(LIB_CURRENT_VERSION) -install_name $(LIB_NAME) 
endif

ifeq ($(UNAME), Linux)
SHARED_OPTIONS     = -Wl,-rpath,'$$ORIGIN/../lib'
COMPILATOR_OPTIONS+= -ansi
LIBS              += -ldl
endif

INCLUDE            = -I.
COMPILE            = $(COMPILATOR) $(COMPILATOR_OPTIONS) $(INCLUDE) -c
OBJS_LIB           = TrainingSet.o Surrogate_Parameters.o Surrogate_KS.o Surrogate_RBF.o \
                     Surrogate_PRS.o Surrogate_PRS_EDGE.o Surrogate_LOWESS.o Surrogate_Kriging.o\
                     Surrogate_PRS_CAT.o Surrogate_Ensemble.o \
                     Surrogate.o Matrix.o Kernel.o Surrogate_Utils.o Surrogate_Factory.o \
                     Tests.o 
OBJS_MAIN          = sgtelib_main.o sgtelib_server.o

ifdef BUILD_DIR
else
BUILD_DIR          = ../build
endif

OBJS_MAIN         := $(addprefix $(BUILD_DIR)/,$(OBJS_MAIN))
OBJS_LIB          := $(addprefix $(BUILD_DIR)/,$(OBJS_LIB))

.SECONDARY: %.o

define DisplayCommand
	@if $(1) ; then echo "---> $@ OK" ; else echo "compilation failed for $@" ; fi
endef
define DisplayCommand0
	@if $(1) ; then echo " ----> OK" ; else echo " ----> FAILED" ; fi
endef


all: $(OBJS_LIB) $(OBJS_MAIN) $(LIB) $(EXE)


%.exe: $(BUILD_DIR)/%.o $(OBJS_MAIN) $(OBJS_LIB) $(LIB)
	@echo
	@echo "== Making $@ =="
	$(call DisplayCommand,$(COMPILATOR) -o $@ $(OBJS_LIB) $< $(LIBS) $(COMPILATOR_OPTIONS))
	#$(COMPILATOR) -o $@ $(OBJS_LIB) $< $(LIBS) $(COMPILATOR_OPTIONS)
	@echo

$(LIB): $(OBJS_LIB) $(OBJS_MAIN)
	@echo
	@echo "== Making $@ =="
	$(call DisplayCommand,$(COMPILATOR) -shared -o $@ $(OBJS_LIB) $(LIBS) $(SHARED_OPTIONS) $(COMPILATOR_OPTIONS))


$(BUILD_DIR)/%.o: %.cpp %.hpp
	@mkdir -p $(BUILD_DIR)	
	$(call DisplayCommand,$(COMPILE) $< -o $@)
	
clean:
	@echo " --> cleaning obj files" 
	$(call DisplayCommand0,rm -f $(OBJS_LIB) $(OBJS_MAIN))

del:
	@echo " --> cleaning trash files" 
	$(call DisplayCommand0,rm -f core *~)
	@echo " --> cleaning obj files"
	$(call DisplayCommand0,rm -f $(OBJS_LIB) $(OBJ_MAIN))
	@echo " --> cleaning exe file" 
	$(call DisplayCommand0,rm -f $(EXE))
	@echo " --> cleaning library file" 
	$(call DisplayCommand0,rm -f $(LIB))

mess: 
	@echo " ===== Compiling Sgtelib objects ===== "

